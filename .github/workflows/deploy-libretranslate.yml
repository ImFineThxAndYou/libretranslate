name: Deploy libretranslate (ECR → ECS)

on:
  push:
    branches: [ main ]
    paths:
      - 'libretranslate/**'   # 필요 시 조정 (Dockerfile/소스 경로)
      - '.github/workflows/deploy-libretranslate.yml'
  workflow_dispatch:

jobs:
  deploy-libretranslate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # AWS 자격증명 설정(계정에 맞게 Secrets 준비)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Docker Build & Push (SHA 태그; 선택적으로 별칭 태그도 푸시)
      - name: Build & Push image to ECR
        env:
          REGISTRY: ${{ secrets.ECR_REGISTRY }}                 # 예: 2579....dkr.ecr.ap-northeast-2.amazonaws.com
          REPO:     ${{ secrets.ECR_REPO_LIBRE }}               # 예: libretranslate
          SHA:      ${{ github.sha }}
          CTX:      ${{ secrets.LIBRE_BUILD_CONTEXT || '.' }}   # Docker build context 경로(기본 '.')
        run: |
          IMAGE="$REGISTRY/$REPO:$SHA"
          docker build -t "$IMAGE" "$CTX"
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

          # (선택) 별칭 태그도 함께 푸시하고 싶으면 LIBRE_ALIAS_TAG secret에 값 넣기 (예: enko-v1.3.2)
          if [ -n "${{ secrets.LIBRE_ALIAS_TAG }}" ]; then
            ALIAS="$REGISTRY/$REPO:${{ secrets.LIBRE_ALIAS_TAG }}"
            docker tag "$IMAGE" "$ALIAS"
            docker push "$ALIAS"
          fi

      # 현재 서비스가 쓰는 태스크 정의 ARN 조회
      - name: Get current task definition ARN
        id: cur
        run: |
          ARN=$(aws ecs describe-services \
            --cluster "${{ secrets.ECS_CLUSTER }}" \
            --services "${{ secrets.ECS_SERVICE_LIBRE }}" \
            --query "services[0].taskDefinition" --output text)
          echo "TASKDEF_ARN=$ARN" >> $GITHUB_OUTPUT

      # 태스크 정의 JSON 덤프
      - name: Export current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition "${{ steps.cur.outputs.TASKDEF_ARN }}" \
            --query "taskDefinition" > taskdef.json
          cat taskdef.json

      # 컨테이너 이미지 경로만 libretranslate 컨테이너에 반영
      - name: Patch image in task definition
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          cat taskdef.json \
          | jq 'del(.taskDefinitionArn,.revision,.status,.requiresAttributes,.compatibilities,.registeredAt,.registeredBy,.deregisteredAt,.deregisteredReason,.taskDefinitionTags)' \
          | jq --arg IMG "${{ env.IMAGE }}" \
               '.containerDefinitions |= (map(if .name=="libretranslate" then .image=$IMG else . end))' \
          > taskdef-patched.json
          cat taskdef-patched.json

      # 새 리비전 등록
      - name: Register new task definition
        id: reg
        run: |
          NEW_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://taskdef-patched.json \
            --query "taskDefinition.taskDefinitionArn" --output text)
          echo "NEW_TASKDEF_ARN=$NEW_ARN" >> $GITHUB_OUTPUT
          echo "New TaskDef: $NEW_ARN"

      # 서비스 업데이트(롤링 배포)
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster "${{ secrets.ECS_CLUSTER }}" \
            --service "${{ secrets.ECS_SERVICE_LIBRE }}" \
            --task-definition "${{ steps.reg.outputs.NEW_TASKDEF_ARN }}" \
            --region "${{ secrets.AWS_REGION }}"

      # (선택) 배포 완료 대기
      - name: Wait for stable service
        run: |
          aws ecs wait services-stable \
            --cluster "${{ secrets.ECS_CLUSTER }}" \
            --services "${{ secrets.ECS_SERVICE_LIBRE }}"